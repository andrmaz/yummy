// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormFields Component should render Component correctly 1`] = `
<Center
  color="white"
  h="20vh"
  m="auto"
  maxW="500px"
  minW="300px"
>
  <FormControl
    isRequired="true"
    onSubmit={[Function]}
  >
    <InputGroup
      size="md"
    >
      <SearchInput
        control={
          Object {
            "defaultValuesRef": Object {
              "current": Object {
                "diet": "balanced",
                "health": "tree-nut-free",
                "input": "",
                "to": 4,
              },
            },
            "fieldArrayDefaultValuesRef": Object {
              "current": Object {},
            },
            "fieldArrayNamesRef": Object {
              "current": Set {},
            },
            "fieldArrayValuesRef": Object {
              "current": Object {},
            },
            "fieldsRef": Object {
              "current": Object {},
            },
            "fieldsWithValidationRef": Object {
              "current": Object {},
            },
            "formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": true,
              "isValidating": false,
              "submitCount": 0,
              "touched": Object {},
            },
            "formStateRef": Object {
              "current": Object {
                "dirtyFields": Object {},
                "errors": Object {},
                "isDirty": false,
                "isSubmitSuccessful": false,
                "isSubmitted": false,
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "submitCount": 0,
                "touched": Object {},
              },
            },
            "getValues": [Function],
            "isFormDirty": [Function],
            "mode": Object {
              "isOnAll": false,
              "isOnBlur": false,
              "isOnChange": true,
              "isOnSubmit": false,
              "isOnTouch": false,
            },
            "reValidateMode": Object {
              "isReValidateOnBlur": false,
              "isReValidateOnChange": true,
            },
            "readFormStateRef": Object {
              "current": Object {
                "constructor": true,
                "dirtyFields": true,
                "errors": true,
                "isDirty": true,
                "isSubmitSuccessful": true,
                "isSubmitted": true,
                "isSubmitting": true,
                "isValid": true,
                "isValidating": true,
                "submitCount": true,
                "touched": true,
              },
            },
            "register": [Function],
            "removeFieldEventListener": [Function],
            "resetFieldArrayFunctionRef": Object {
              "current": Object {},
            },
            "setValue": [Function],
            "shallowFieldsStateRef": Object {
              "current": Object {},
            },
            "shouldUnregister": true,
            "trigger": [Function],
            "unregister": [Function],
            "updateFormState": [Function],
            "updateWatchedValue": [Function],
            "useWatchFieldsRef": Object {
              "current": Object {},
            },
            "useWatchRenderFunctionsRef": Object {
              "current": Object {},
            },
            "validFieldsRef": Object {
              "current": Object {},
            },
            "validateResolver": undefined,
            "watchInternal": [Function],
          }
        }
        errors={Object {}}
      />
      <InputRightElement
        width="4.5rem"
      >
        <Button
          colorScheme="blue"
          h="1.75rem"
          id="button"
          isDisabled={true}
          onClick={[Function]}
          size="sm"
          variant="solid"
        >
          Search
        </Button>
      </InputRightElement>
    </InputGroup>
    <Flex
      justify="space-around"
    >
      <SelectRecipes
        control={
          Object {
            "defaultValuesRef": Object {
              "current": Object {
                "diet": "balanced",
                "health": "tree-nut-free",
                "input": "",
                "to": 4,
              },
            },
            "fieldArrayDefaultValuesRef": Object {
              "current": Object {},
            },
            "fieldArrayNamesRef": Object {
              "current": Set {},
            },
            "fieldArrayValuesRef": Object {
              "current": Object {},
            },
            "fieldsRef": Object {
              "current": Object {},
            },
            "fieldsWithValidationRef": Object {
              "current": Object {},
            },
            "formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": true,
              "isValidating": false,
              "submitCount": 0,
              "touched": Object {},
            },
            "formStateRef": Object {
              "current": Object {
                "dirtyFields": Object {},
                "errors": Object {},
                "isDirty": false,
                "isSubmitSuccessful": false,
                "isSubmitted": false,
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "submitCount": 0,
                "touched": Object {},
              },
            },
            "getValues": [Function],
            "isFormDirty": [Function],
            "mode": Object {
              "isOnAll": false,
              "isOnBlur": false,
              "isOnChange": true,
              "isOnSubmit": false,
              "isOnTouch": false,
            },
            "reValidateMode": Object {
              "isReValidateOnBlur": false,
              "isReValidateOnChange": true,
            },
            "readFormStateRef": Object {
              "current": Object {
                "constructor": true,
                "dirtyFields": true,
                "errors": true,
                "isDirty": true,
                "isSubmitSuccessful": true,
                "isSubmitted": true,
                "isSubmitting": true,
                "isValid": true,
                "isValidating": true,
                "submitCount": true,
                "touched": true,
              },
            },
            "register": [Function],
            "removeFieldEventListener": [Function],
            "resetFieldArrayFunctionRef": Object {
              "current": Object {},
            },
            "setValue": [Function],
            "shallowFieldsStateRef": Object {
              "current": Object {},
            },
            "shouldUnregister": true,
            "trigger": [Function],
            "unregister": [Function],
            "updateFormState": [Function],
            "updateWatchedValue": [Function],
            "useWatchFieldsRef": Object {
              "current": Object {},
            },
            "useWatchRenderFunctionsRef": Object {
              "current": Object {},
            },
            "validFieldsRef": Object {
              "current": Object {},
            },
            "validateResolver": undefined,
            "watchInternal": [Function],
          }
        }
      />
      <SelectDiet
        control={
          Object {
            "defaultValuesRef": Object {
              "current": Object {
                "diet": "balanced",
                "health": "tree-nut-free",
                "input": "",
                "to": 4,
              },
            },
            "fieldArrayDefaultValuesRef": Object {
              "current": Object {},
            },
            "fieldArrayNamesRef": Object {
              "current": Set {},
            },
            "fieldArrayValuesRef": Object {
              "current": Object {},
            },
            "fieldsRef": Object {
              "current": Object {},
            },
            "fieldsWithValidationRef": Object {
              "current": Object {},
            },
            "formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": true,
              "isValidating": false,
              "submitCount": 0,
              "touched": Object {},
            },
            "formStateRef": Object {
              "current": Object {
                "dirtyFields": Object {},
                "errors": Object {},
                "isDirty": false,
                "isSubmitSuccessful": false,
                "isSubmitted": false,
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "submitCount": 0,
                "touched": Object {},
              },
            },
            "getValues": [Function],
            "isFormDirty": [Function],
            "mode": Object {
              "isOnAll": false,
              "isOnBlur": false,
              "isOnChange": true,
              "isOnSubmit": false,
              "isOnTouch": false,
            },
            "reValidateMode": Object {
              "isReValidateOnBlur": false,
              "isReValidateOnChange": true,
            },
            "readFormStateRef": Object {
              "current": Object {
                "constructor": true,
                "dirtyFields": true,
                "errors": true,
                "isDirty": true,
                "isSubmitSuccessful": true,
                "isSubmitted": true,
                "isSubmitting": true,
                "isValid": true,
                "isValidating": true,
                "submitCount": true,
                "touched": true,
              },
            },
            "register": [Function],
            "removeFieldEventListener": [Function],
            "resetFieldArrayFunctionRef": Object {
              "current": Object {},
            },
            "setValue": [Function],
            "shallowFieldsStateRef": Object {
              "current": Object {},
            },
            "shouldUnregister": true,
            "trigger": [Function],
            "unregister": [Function],
            "updateFormState": [Function],
            "updateWatchedValue": [Function],
            "useWatchFieldsRef": Object {
              "current": Object {},
            },
            "useWatchRenderFunctionsRef": Object {
              "current": Object {},
            },
            "validFieldsRef": Object {
              "current": Object {},
            },
            "validateResolver": undefined,
            "watchInternal": [Function],
          }
        }
      />
      <SelectHealth
        control={
          Object {
            "defaultValuesRef": Object {
              "current": Object {
                "diet": "balanced",
                "health": "tree-nut-free",
                "input": "",
                "to": 4,
              },
            },
            "fieldArrayDefaultValuesRef": Object {
              "current": Object {},
            },
            "fieldArrayNamesRef": Object {
              "current": Set {},
            },
            "fieldArrayValuesRef": Object {
              "current": Object {},
            },
            "fieldsRef": Object {
              "current": Object {},
            },
            "fieldsWithValidationRef": Object {
              "current": Object {},
            },
            "formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": true,
              "isValidating": false,
              "submitCount": 0,
              "touched": Object {},
            },
            "formStateRef": Object {
              "current": Object {
                "dirtyFields": Object {},
                "errors": Object {},
                "isDirty": false,
                "isSubmitSuccessful": false,
                "isSubmitted": false,
                "isSubmitting": false,
                "isValid": true,
                "isValidating": false,
                "submitCount": 0,
                "touched": Object {},
              },
            },
            "getValues": [Function],
            "isFormDirty": [Function],
            "mode": Object {
              "isOnAll": false,
              "isOnBlur": false,
              "isOnChange": true,
              "isOnSubmit": false,
              "isOnTouch": false,
            },
            "reValidateMode": Object {
              "isReValidateOnBlur": false,
              "isReValidateOnChange": true,
            },
            "readFormStateRef": Object {
              "current": Object {
                "constructor": true,
                "dirtyFields": true,
                "errors": true,
                "isDirty": true,
                "isSubmitSuccessful": true,
                "isSubmitted": true,
                "isSubmitting": true,
                "isValid": true,
                "isValidating": true,
                "submitCount": true,
                "touched": true,
              },
            },
            "register": [Function],
            "removeFieldEventListener": [Function],
            "resetFieldArrayFunctionRef": Object {
              "current": Object {},
            },
            "setValue": [Function],
            "shallowFieldsStateRef": Object {
              "current": Object {},
            },
            "shouldUnregister": true,
            "trigger": [Function],
            "unregister": [Function],
            "updateFormState": [Function],
            "updateWatchedValue": [Function],
            "useWatchFieldsRef": Object {
              "current": Object {},
            },
            "useWatchRenderFunctionsRef": Object {
              "current": Object {},
            },
            "validFieldsRef": Object {
              "current": Object {},
            },
            "validateResolver": undefined,
            "watchInternal": [Function],
          }
        }
      />
    </Flex>
  </FormControl>
</Center>
`;
